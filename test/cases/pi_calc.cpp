#include <gtest/gtest.h>
#include "pi.h"
#include <iostream>

using namespace longarithmetic;

TEST(PiCalculationCase, hundred) {
    std::string answer = "PI with 100 digits:\n3.141592653589793238462643383279502884197169399375105820974944592307"
                         "8164062862089986280348253421170679\n";
    std::streambuf *safe_out = std::cout.rdbuf();
    std::stringstream test_out;
    std::cout.rdbuf(test_out.rdbuf());
    long double time = calc_pi(100);
    std::cout.rdbuf(safe_out);
    EXPECT_EQ(answer, test_out.str());
    EXPECT_LE(time, 1.0L);
}

TEST(PiCalculationCase, two_hundred) {
    std::string answer = "PI with 200 digits:\n3.1415926535897932384626433832795028841971693993751058209749445923078"
                         "164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174"
                         "5028410270193852110555964462294895493038196\n";
    std::streambuf *safe_out = std::cout.rdbuf();
    std::stringstream test_out;
    std::cout.rdbuf(test_out.rdbuf());
    calc_pi(200);
    std::cout.rdbuf(safe_out);
    EXPECT_EQ(answer, test_out.str());
}

TEST(PiCalculationCase, thousend) {
    std::string answer = "PI with 1000 digits:\n3.141592653589793238462643383279502884197169399375105820974944592307"
                         "816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117"
                         "450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201"
                         "909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829"
                         "254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186"
                         "117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656"
                         "643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568"
                         "127145263560827785771342757789609173637178721468440901224953430146549585371050792279689258"
                         "923542019956112129021960864034418159813629774771309960518707211349999998372978049951059731"
                         "732816096318595024459455346908302642522308253344685035261931188171010003137838752886587533"
                         "208381420617177669147303598253490428755468731159562863882353787593751957781857780532171226"
                         "8066130019278766111959092164201989\n";
    std::streambuf *safe_out = std::cout.rdbuf();
    std::stringstream test_out;
    std::cout.rdbuf(test_out.rdbuf());
    calc_pi(1000);
    std::cout.rdbuf(safe_out);
    EXPECT_EQ(answer, test_out.str());
}
